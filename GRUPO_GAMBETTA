#include <bits/stdc++.h>
using namespace std;

void imprimir (int vector[], int ene){
	for (int i = 1; i <= ene; i++)
		cout << vector[i] << " ";
	cout << endl;
}

void intercambio (int *menor, int *mayor){
	int temp = *menor;
	*menor = *mayor;
	*mayor = temp;
}

void Burbuja_clasica (int vector[], int ene){
	int temp, j, k, pas = 0, inter = 0, i;
	for (i = 1; i <= ene - 1; i++){
		pas++;
		for (j = 1;	 j <= ene - 1; j++){
			if (vector[j] > vector[j + 1]){
				intercambio (&vector[j], &vector[j + 1]);
				inter++;
			}
		}
		cout << endl;
		cout << "\t\t\tPASADAS: " << pas <<endl;
		cout << endl;
		cout << "\t\t\t\t";
		imprimir (vector, ene);
		cout << endl;
		cout << "\t\t\t\t\tINTERCAMBIOS: " << inter << endl;
	}
	
}

void Burbuja_2 (int vector[], int ene){
	int temp,i, j, pas = 0, inter = 0;
	for (i = 1; i <= ene - 1; i++){
		pas++;
		for (j = 1;	 j <= ene - i; j++){
			if (vector[j] > vector[j + 1]){
				intercambio (&vector[j], &vector[j + 1]);
				inter++;
			}
		}
		
		cout << endl;
		cout << "\t\t\tPASADAS: " << pas <<endl;
		cout << endl;
		cout << "\t\t\t\t";
		imprimir (vector, ene);
		cout << endl;
		cout << "\t\t\t\t\tINTERCAMBIOS: " << inter << endl;
	}
}

void BurBand (int vector[],int ene)
{
	int temp, i = 1, j, inter = 0, pas = 0;
	bool band = false;
	
	while ((band == false) && (i < ene)){
		band = true;
		for (j = 1; j <= ene - i; j++){
			pas++;
			if (vector[j] > vector[j + 1]){
				inter++;
				intercambio (&vector[j], &vector[j + 1]);
				band = false;
			}
			cout << endl;
			cout << "\t\t\tPASADAS: " << pas <<endl;
			cout << endl;
			cout << "\t\t\t\t";
			imprimir (vector, ene);
			cout << endl;
			cout << "\t\t\t\t\tINTERCAMBIOS: " << inter << endl;
		}
		i = i + 1;
	}
}

void Selection (int vector[], int ene){
	int k, i, j, pas = 0, inter = 0;
	int menor;
	for (int i = 1; i <= ene - 1; i++){
		menor = vector[i];
		k = i;
		pas++;
		for (j = i + 1; j <= ene; j++){
			if (vector[j] < menor){
				menor = vector[j];
				k = j;
				inter++;
			}
		}
		vector[k] = vector[i];
		vector[i] = menor;
		
		cout << endl;
		cout << "\t\t\tPASADAS: " << pas <<endl;
		cout << endl;
		cout << "\t\t\t\t";
		imprimir (vector, ene);
		cout << endl;
		cout << "\t\t\t\t\tINTERCAMBIOS: " << inter << endl;
	}
}

void Insertion (int vector[], int ene){
	int i, j, temp, pas = 0, inter = 0;
	for (i = 1; i <= ene; i++){
		temp = vector[i];
		pas++;
    	j = i - 1;
		while ((vector[j] > temp) && (j >= 0) ){
			vector[j + 1] = vector[j];
    		j--;
            inter++;
        }
        
        vector[j + 1] = temp;
        
        cout << endl;
		cout << "\t\t\tPASADAS: " << pas <<endl;
		cout << endl;
		cout << "\t\t\t\t";
		imprimir (vector, ene);
		cout << endl;
		cout << "\t\t\t\t\tINTERCAMBIOS: " << inter << endl;
		}
}

void Shell (int vector[], int ene){
	int salto, i, j, k, pas = 0, inter = 0;
	salto = ene / 2;
	while (salto > 0){
		pas++;
		for (i = salto; i <= ene; i++){
			j = i - salto;
			while (j >= 0){
				k = j + salto;
				if (vector[j] <= vector[k])
					j =- 1;
				else{
					double temp;
					intercambio (&vector[j], &vector[k]);
					j = j - salto;
					inter++;
				}
			}
		}
		
		salto = salto / 2;
		
		cout << endl;
		cout << "\t\t\tPASADAS: " << pas <<endl;
		cout << endl;
		cout << "\t\t\t\t";
		imprimir (vector, ene);
		cout << endl;
		cout << "\t\t\t\t\tINTERCAMBIOS: " << inter << endl;
	}
}

void quickSort (int vector[], int primero, int ultimo){
	int i, j, central, temp, pas = 0, inter = 0;
	double pivote;
	
	central = (primero + ultimo) / 2;
	pivote = vector[central];
	
	i = primero;
	j = ultimo;
	
	do {
		pas++;
		while (vector[i] < pivote) i++;
		while (vector[j] > pivote) j--;
		
		if (i <= j){
			intercambio (&vector[i], &vector[j]);
			i++;
			j--;
			inter++;
		}
		
		cout << endl;
		cout << "\t\t\tPASADAS: " << pas <<endl;
		cout << endl;
		cout << "\t\t\t\t";
		imprimir (vector, ultimo);
		cout << endl;
		cout << "\t\t\t\t\tINTERCAMBIOS: " << inter << endl;
		
	} while (i <= j);
	
	if (primero < j)
		quickSort(vector, primero, j);
	if (i < ultimo)
		quickSort(vector, i, ultimo);
}

int main()
{
	cout << endl;
	cout << "******************************************************************************************************************************************************************************************************************" << endl;
	cout << "******************************************************************************************************************************************************************************************************************" << endl;
	cout << "******************************************************************************************************************************************************************************************************************" << endl << endl;
	
	cout << "\t\t\t\t\t\t\t\t\t\t\t_____________________________________" << endl << endl;
	cout << "\t\t\t\t\t\t\t\t\t\t\t\t     VECTONEITOR" << endl;
	cout << "\t\t\t\t\t\t\t\t\t\t\t\tORDENADOR DE VECTORES" << endl;
	cout << "\t\t\t\t\t\t\t\t\t\t\t_____________________________________" << endl << endl << endl << endl;
	
	int n;
	cout << "\t\tIngrese el numero de elementos del vector (n): "; cin >> n;
	cout << endl;
	
	int x[n],opcion;
	for (int i = 1; i <= n; i++){
		x[i] = rand() % 99;
	}
	
	cout << endl << endl;
	cout << "\t\t**************************************************************************************************************************************************************************************" << endl << endl;
	
	cout << endl;
	cout << "\t\t\t// Vector Desordenado //" << endl << endl << endl;
	cout << "\t\t\t\t";
	imprimir (x,n);
	
	cout << endl << endl;
	cout << "\t\t**************************************************************************************************************************************************************************************" << endl << endl;
	
	cout << endl << endl;
	cout << "\t\t\t\t// METODO DE ORDENAMIENTO A USAR //" << endl << endl;
	
	cout << "\t\t\t\t\t1. BURBUJA CLASICA" << endl;
	cout << "\t\t\t\t\t2. BURBUJA j = n - i" << endl;
	cout << "\t\t\t\t\t3. BURBUJA CON BANDERA" << endl;
	cout << "\t\t\t\t\t4. SELECCION" << endl;
	cout << "\t\t\t\t\t5. INSERCION" << endl;
	cout << "\t\t\t\t\t6. SHELL" << endl;
	cout << "\t\t\t\t\t7. QUICKSORT" << endl << endl;
	
	cout<< "\t\t\t\t\tOpcion a elegir: "; cin >> opcion;
	cout<< endl << endl << endl;
	
	cout << "\t\t**************************************************************************************************************************************************************************************" << endl << endl;
	
	switch(opcion){
		case 1: Burbuja_clasica (x,n); break;
		case 2: Burbuja_2 (x,n); break;
		case 3: BurBand (x,n); break;
		case 4: Selection (x,n); break;
		case 5: Insertion (x,n); break;
		case 6: Shell (x,n); break;
		case 7: quickSort (x,1,n); break;
		default:
			cout << "\t\t\t\t\tOpcion invalida." << endl;
			return 0;
	}
	
	cout << endl << endl;
	cout << "\t\t**************************************************************************************************************************************************************************************" << endl << endl;
	
	cout << endl;
	cout << "\t\t\t// Vector Ordenado //" << endl << endl << endl;
	cout << "\t\t\t\t";
	imprimir (x,n);
	cout << endl;
	
	cout << endl << endl;
	cout << "\t\t**************************************************************************************************************************************************************************************" << endl << endl;
	
	cout << "\t\t\t\t\t\t\t " << endl << endl;
	cout << "\t\t\t\t\t\t\t\t\tMEDINA, Marcelo." << endl << endl;
	cout << "\t\t\t\t\t\t\t\t\tCHATA, Brant." << endl << endl;
	cout << "\t\t\t\t\tElaborado por:\t\t\tLIZARRAGA POMAREDA, Sergio." << endl << endl;
	cout << "\t\t\t\t\t\t\t\t\tLUPACA, Ronal Daniel." << endl << endl;
	cout << "\t\t\t\t\t\t\t\t\tGAMBETTA CABRERA, Carlos Maurizzio." << endl << endl;
	
	return 0;
}
